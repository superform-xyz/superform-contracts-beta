require("dotenv").config();

const { ethers } = require("ethers")
const { superRouter } = require("./deployments/polygon.json");
const SuperRouterABI = require("./deployments/ABI/SuperRouter.abi.json");

async function main() {
    const provider = new ethers.providers.JsonRpcProvider(process.env.POLYGON_RPC_URL)
    const signer = new ethers.Wallet(process.env.PRIVATE_KEY, provider)

    const superRouterContract = new ethers.Contract(superRouter, SuperRouterABI, signer)

    /**
     * @note first argument is state_data
     * second argument is liq_data
     */
    const tx1 = await superRouterContract.withdraw([
        ["109", ["3956788"],
            ["1371"],
            ["100"], "0x000100000000000000000000000000000000000000000000000000000000004c4b40", "11000000000000000000"
        ]
    ], [
        ["1",
            "0xa44bbb150000000000000000000000000000000000000000000000000000000000000020000000000000000000000000092a9fafa20bdfa4b2ee721fe66af64d94bb9faf00000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000003c50bf00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000008e0000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000007887c02520000000000000000000000000013927a60c7bf4d3d00e3c1593e0ec713e35d2106000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001800000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000cd353f79d9fade311fc3119b841e1f456b54e858000000000000000000000000c30141b657f4216252dc59af2e7cdb9d8792e1b000000000000000000000000000000000000000000000000000000000003c50bf0000000000000000000000000000000000000000000000003d1084ab1521909900000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005e000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a4b757fed6000000000000000000000000cd353f79d9fade311fc3119b841e1f456b54e8580000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa841740000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000002dc6c013927a60c7bf4d3d00e3c1593e0ec713e35d2106000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000014414284aab000000000000000000000000000000000000000000000000000000000000008080000000000000000000000000000000000000000000000000000000000000040000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf127000000000000000000000000000000001000000000000000000000000000000018000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000242e1a7d4d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000018414284aab00000000000000000000000000000000000000000000000000000000000000808000000000000000000000000000000000000000000000000000000000000044000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000064d1660f99000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000001111111254fb6c44bac0bed2854e76f90643097d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000733d4004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000",
            "0x2791bca1f2de4661ed88a30c99a7a9449aa84174", "0x2ddf16BA6d0180e5357d5e170eF1917a01b41fc0", "4956788"
        ]
    ])
    await tx1.wait()
    console.log(tx1.hash)
}

main().catch((error) => {
    console.log(error);
    process.exitCode = 1;
})